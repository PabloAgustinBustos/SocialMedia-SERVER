// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int     @id
  email     String  @db.VarChar(40) @unique
  password  String  @db.VarChar(8)

  user      User?

  @@map("accounts")
}

model User {
  id                      Int           @id
  photoURL                String?       @db.VarChar(50) @map("photo_url")
  username                String        @db.VarChar(20)
  
  accountID               Int           @unique @map("account_id")
  account                 Account       @relation(fields: [accountID], references: [id])

  profile                 Profile?

  friends                 Friendship[]  @relation("friends")
  friendOf                Friendship[]  @relation("friendOf")

  friendRequestsReceived  FriendRequest[]  @relation("requestReceived")
  friendRequestsSent      FriendRequest[]  @relation("requestSent")

  @@map("users")
}

model Profile {
  id              Int       @id
  firstname       String    @db.VarChar(10)
  lastname        String    @db.VarChar(10)
  birthday        DateTime
  description     String    @default("")
  friendsAmount   Int       @default(0) @map("friends_amount")

  userID          Int       @unique @map("user_id")
  user            User      @relation(fields: [userID], references: [id])

  @@map("profiles")
}

model Friendship {
  firstFriendID   Int       @map("first_friend_id")
  firstFriend     User      @relation("friends", fields: [firstFriendID], references: [id])
  
  secondFriendID  Int       @map("second_friend_id")
  secondFriend    User      @relation("friendOf", fields: [secondFriendID], references: [id])

  createdAt       DateTime  @default(now())

  @@id([firstFriendID, secondFriendID])
  @@map("friendships")
}

model FriendRequest {
  senderID        Int       @map("sender_id")
  sender          User      @relation("requestSent", fields: [senderID], references: [id])
  
  receiverID      Int       @map("receiver_id")
  receiver        User      @relation("requestReceived", fields: [receiverID], references: [id])

  createdAt       DateTime  @default(now())

  @@id([senderID, receiverID])
  @@map("friend_requests")
}

